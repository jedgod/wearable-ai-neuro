{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# AI-Enhanced Multimodal Analysis for Rare Neurological Disorders\n",
    "## Data Preprocessing, Model Development, and Visualization\n",
    "This notebook processes synthetic wearable data, trains a Gradient Boosting Classifier, and visualizes results for early detection of rare neurological disorders."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score\n",
    "import seaborn as sns\n",
    "import plotly.express as px\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Set random seed for reproducibility\n",
    "np.random.seed(42)\n",
    "\n",
    "# 1. Data Preprocessing\n",
    "# Generate synthetic wearable data (accelerometer and heart rate)\n",
    "n_samples = 1000\n",
    "time = np.arange(n_samples)\n",
    "accel_x = np.random.normal(0, 1, n_samples) + np.sin(time / 50)  # Simulate gait\n",
    "heart_rate = np.random.normal(80, 10, n_samples)  # Simulate HR\n",
    "labels = np.random.choice([0, 1], size=n_samples, p=[0.7, 0.3])  # 0: Healthy, 1: Disorder\n",
    "\n",
    "data = pd.DataFrame({\n",
    "    'time': time,\n",
    "    'accel_x': accel_x,\n",
    "    'heart_rate': heart_rate,\n",
    "    'label': labels\n",
    "})\n",
    "\n",
    "# Handle missing values and smooth data\n",
    "data['accel_x'] = data['accel_x'].fillna(data['accel_x'].mean())\n",
    "data['heart_rate'] = data['heart_rate'].fillna(data['heart_rate'].mean())\n",
    "data['accel_x_smoothed'] = data['accel_x'].rolling(window=10).mean()\n",
    "\n",
    "# Feature engineering: Calculate stride variability\n",
    "data['stride_variability'] = data['accel_x'].diff().abs().rolling(window=20).std()\n",
    "data = data.dropna()\n",
    "\n",
    "# 2. Model Development\n",
    "X = data[['accel_x_smoothed', 'heart_rate', 'stride_variability']]\n",
    "y = data['label']\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "model = GradientBoostingClassifier(n_estimators=100, random_state=42)\n",
    "model.fit(X_train, y_train)\n",
    "y_pred = model.predict(X_test)\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print(f'Model Accuracy: {accuracy:.2f}')\n",
    "\n",
    "# 3. Visualization\n",
    "# Time-series plot of accelerometer data\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.lineplot(x='time', y='accel_x_smoothed', hue='label', data=data)\n",
    "plt.title('Smoothed Accelerometer Data by Label')\n",
    "plt.show()\n",
    "\n",
    "# Interactive Plotly plot for heart rate\n",
    "fig = px.line(data, x='time', y='heart_rate', color='label', title='Heart Rate Over Time')\n",
    "fig.show()"
   ],
   "outputs": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}